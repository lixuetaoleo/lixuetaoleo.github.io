{"componentChunkName":"component---src-template-index-tsx","path":"/post/利用CSS实现各种形状(及实现原理)/","result":{"data":{"markdownRemark":{"html":"<p>首先奉上CSS-trick上的利用CSS画各种形状：<a href=\"https://css-tricks.com/the-shapes-of-css/\">The Shapes of CSS</a></p>\n<p>在利用CSS画三角形时，我出现了一个疑虑：凭什么width和height都设置了0，四边border都设置了px，最后border是三角形？</p>\n<p>后来经过研究，发现了其原理：</p>\n<p>首先假设width和height都不为0：</p>\n<pre><code class=\"language-css\">#demo{\n  width:100px;  \n  height:100px;  \n  border: 20px solid;  \n  border-color: red blue red blue; \n}\n</code></pre>\n<p><img src=\"https://i.loli.net/2020/02/23/WnICKSfRarqvDm8.png\" alt=\"6238168-e20f899ad54bc05a.png\"></p>\n<p>从图中看到每个border都是一个梯形，这并不像我之前以为的矩形。</p>\n<p>接下来把div元素的宽变为0,这种情况下border又会是怎么变化的呢？</p>\n<pre><code class=\"language-css\">#demo{\n  width:0px;  \n  height:0px;  \n  border: 40px solid;  \n  border-color: red blue red blue; \n}\n</code></pre>\n<p><img src=\"https://i.loli.net/2020/02/23/WpMj1K9gcsAVfu7.png\" alt=\"6238168-e270e4d37c79e4a7.png\"></p>\n<p>在这种情况下，4个梯形变成了4个个三角形。那么到这里也就知道了如何使用CSS画三角形了。</p>\n<p>想要哪个方向的三角形，将该边的border设为非0px，其余几条边的border设置为:<code>border-xxx: solid xxpx transparent</code></p>","frontmatter":{"title":"利用CSS实现各种形状(及实现原理)","date":"2020-02-21","titleImage":null}}},"pageContext":{"slug":"/利用CSS实现各种形状(及实现原理)/"}}}